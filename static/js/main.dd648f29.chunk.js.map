{"version":3,"sources":["components/Navigation.tsx","api.ts","components/Loader/Loader.tsx","components/PersonLink.tsx","components/PeopleTable.tsx","components/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navigation","className","role","to","isActive","classNames","API_URL","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","errorMessage","loading","selectedPersonSlug","parentName","find","p","length","map","mother","motherName","father","fatherName","born","died","PeoplePage","useState","setPeople","setErrorMessage","setLoading","match","useMatch","params","useEffect","catch","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.dd648f29.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => (\n              classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            )}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => (\n              classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )\n            )}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  return (\n    <td>\n      <Link\n        to={`/people/${person.slug}`}\n        className={classNames({\n          'has-text-danger': person?.sex === 'f',\n        })}\n      >\n        {person.name}\n      </Link>\n    </td>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  people: Person[],\n  errorMessage: string,\n  loading: boolean,\n  selectedPersonSlug: string | undefined,\n};\n\nexport const PeopleTable: React.FC<Props> = (\n  {\n    people, errorMessage, loading, selectedPersonSlug,\n  },\n) => {\n  function parentName(name: string | null) {\n    return people.find(p => p.name === name) || null;\n  }\n\n  return (\n    <div className=\"block\">\n      {loading\n        ? (\n          <div className=\"box table-container\"><Loader /></div>\n        )\n        : (\n          <div className=\"box table-container\">\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n\n            {people.length === 0 && (\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            )}\n\n            <table\n              data-cy=\"peopleTable\"\n              // eslint-disable-next-line max-len\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n\n                {people.map(person => {\n                  const mother = parentName(person.motherName);\n                  const father = parentName(person.fatherName);\n\n                  return (\n                    <tr\n                      data-cy=\"person\"\n                      key={person.slug}\n                      // onClick={() => {\n                      //   selectedPerson(person);\n                      // }}\n                      className={classNames({\n                        'has-background-warning':\n                        person.slug === selectedPersonSlug,\n                        // person.name === selected?.name,\n                      })}\n                    >\n                      <PersonLink person={person} />\n\n                      <td>{person.sex}</td>\n                      <td>{person.born}</td>\n                      <td>{person.died}</td>\n\n                      {mother\n                        ? (\n                          <PersonLink person={mother} />\n                        )\n                        : (<td>{person.motherName || '-'}</td>)}\n\n                      {father\n                        ? (\n                          <PersonLink person={father} />\n                        )\n                        : (<td>{person.fatherName || '-'}</td>)}\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useMatch } from 'react-router-dom';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { PeopleTable } from './PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const match = useMatch('/people/:slug');\n  const selectedPersonSlug = match?.params.slug;\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 500);\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      getPeople()\n        .then(setPeople)\n        .catch(() => setErrorMessage('Something went wrong'));\n    }\n  }, [people]);\n\n  return (\n    <>\n      <div className=\"block\">\n        <h1 className=\"title\">People Page</h1>\n        <PeopleTable\n          people={people}\n          errorMessage={errorMessage}\n          loading={loading}\n          selectedPersonSlug={selectedPersonSlug}\n        />\n      </div>\n    </>\n  );\n};\n","import {\n  Navigate,\n  Route, Routes,\n} from 'react-router-dom';\nimport './App.scss';\nimport { Navigation } from './components/Navigation';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n            <Route\n              path=\"/people\"\n              element={(\n                <PeoplePage />\n              )}\n            />\n            <Route\n              path=\"/people/:slug\"\n              element={(\n                <PeoplePage />\n              )}\n            />\n            <Route\n              path=\"/home\"\n              element={(\n                <Navigate\n                  to=\"/\"\n                  replace\n                />\n              )}\n            />\n            <Route\n              path=\"*\"\n              element={<h1 className=\"title\">Page not found</h1>}\n            />\n          </Routes>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}